(function($) {
     jQuery.fn.extend({
         uploadPreview: function(opts) {
             opts = jQuery.extend({
                 width: 0,
                 height: 0,
                 minwidth: 0,
                 minheight: 0,
                 imgDiv: "#imgDiv",
                 minImgDiv:"#preview-pane",
                 minImg:"#minImg",
                 imgType: ["gif", "jpeg", "jpg", "bmp", "png"],
                 maxwidth: 0,
                 maxheight: 0,
                 imgurl: null,
                 callback: function() { return false; }
             }, opts || {});
             var _self = this;
             var _this = $(this);
             var imgDiv = $(opts.imgDiv);
             var minImgDiv=$(opts.minImgDiv);
             
             var jcrop_api,
		        boundx,
		        boundy,
		        $preview = $(opts.minImgDiv);
                $pcnt = $('#preview-pane .preview-container'),
		        $pimg = $(opts.minImg);
		        xsize = $pcnt.width(),
		        ysize = $pcnt.height();
             
             
             imgDiv.width(opts.width);
             imgDiv.height(opts.height);
             
            autoScaling = function() {
                 if ($.browser.version == "7.0" || $.browser.version == "8.0") imgDiv.get(0).filters.item("DXImageTransform.Microsoft.AlphaImageLoader").sizingMethod = "image";
                 var img_width = imgDiv.width();
                 var img_height = imgDiv.height();
                 if (img_width > opts.maxwidth || img_height > opts.maxheight) {
                     alert("图片大小不符合要求");
                     clearvalue(_this[0]);
                     _this.trigger("blur"); //失去控件焦点
                    
                     imgDiv.hide();
                     return false;
                 }
                if (img_width > 0 && img_height > 0) {
                     var rate = (opts.width / img_width < opts.height / img_height) ? opts.width / img_width : opts.height / img_height;
                     
                     var minrate = (opts.minwidth / img_width < opts.minheight / img_height) ? opts.minwidth / img_width : opts.minheight / img_height;
                     if (rate <= 1) {
                         if ($.browser.version == "7.0" || $.browser.version == "8.0") 
                        	 imgDiv.get(0).filters.item("DXImageTransform.Microsoft.AlphaImageLoader").sizingMethod = "scale";
//                         imgDiv.width(img_width * rate);
//                         imgDiv.height(img_height * rate);
//                         $pimg.width(img_width * minrate);
//                         $pimg.height(img_height * minrate);
                         
                         imgDiv.width(opts.width);
                         imgDiv.height(opts.height);
                         
                         if (window.navigator.userAgent.indexOf("MSIE") >= 1) {
				            $pimg.width(opts.minwidth);
                            $pimg.height(opts.minheight);
				         }else {
				          $pimg.width(opts.minwidth);
                          $pimg.height(opts.minheight);
				         }
                     } else {
//                         imgDiv.width(img_width);
//                         imgDiv.height(img_height);
//                         $pimg.width(img_width * minrate);
//                         $pimg.height(img_height * minrate);
                    	 imgDiv.width(opts.width);
                         imgDiv.height(opts.height);
                         
                         if (window.navigator.userAgent.indexOf("MSIE") >= 1) {
				            $pimg.width(opts.minwidth);
                            $pimg.height(opts.minheight);
				         }else{
				          $pimg.width(opts.minwidth);
                          $pimg.height(opts.minheight);
				         }
                     }
                     var left = (opts.width - imgDiv.width()) * 0;
                     var top = (opts.height - imgDiv.height()) * 0;
                     imgDiv.css({ "margin": 0, "padding": 0 });
                     imgDiv.show();
                      
                    var  minleft = (opts.minwidth - $pimg.width()) * 0;
                    var  mintop = (opts.minheight -  $pimg.height()) * 0;
                      $pimg.css({ "margin": 0, "padding": 0 });
                      $pimg.show();
                 }
               $(imgDiv).Jcrop({
				      onChange: function(c){
						      if (parseInt(c.w) > 0)
						      {
						  $('#x').val(c.x);  //c.x 裁剪区域左上角顶点相对于图片左上角顶点的x坐标  
	                      $('#y').val(c.y);  //c.y 裁剪区域顶点的y坐标</span>
	                      $('#w').val(c.w);
	                      $('#h').val(c.h);
						        var rx = xsize / c.w;
						        var ry = ysize / c.h;
						        $pimg.css({
						          width: Math.round(rx * boundx) + 'px',
						          height: Math.round(ry * boundy) + 'px',
						          marginLeft: '-' + Math.round(rx * c.x) + 'px',
						          marginTop: '-' + Math.round(ry * c.y) + 'px'
						        });
						      }
				      },
				      onSelect: function(c){
						      if (parseInt(c.w) > 0)
						      {
						        var rx = xsize / c.w;
						        var ry = ysize / c.h;
						  $('#x').val(c.x);  //c.x 裁剪区域左上角顶点相对于图片左上角顶点的x坐标  
	                      $('#y').val(c.y);  //c.y 裁剪区域顶点的y坐标</span>
	                      $('#w').val(c.w);
	                      $('#h').val(c.h);
						  $pimg.css({
						          width: Math.round(rx * boundx) + 'px',
						          height: Math.round(ry * boundy) + 'px',
						          marginLeft: '-' + Math.round(rx * c.x) + 'px',
						          marginTop: '-' + Math.round(ry * c.y) + 'px'
						        });
						      }
				      },
				      aspectRatio: xsize / ysize
				    },function(){
				      var bounds = this.getBounds();
				      boundx = bounds[0];
				      boundy = bounds[1];
				      jcrop_api = this;
				      
		      jcrop_api.setSelect([0,0,opts.minwidth,opts.minheight]);
		      jcrop_api.setOptions({ bgFade: true });
		      jcrop_api.ui.selection.addClass('jcrop-selection');
		      jcrop_api.setOptions({ allowResize: false });

				      $preview.appendTo(jcrop_api.ui.holder);
				   });
             }
             _this.change(function() {
            	 if( jcrop_api&&(!(window.navigator.userAgent.indexOf("MSIE") >= 1))){
            		 jcrop_api.release();
            		 $(".jcrop-holder").remove();
            	 }
                 if (this.value) {
                     if (!RegExp("\.(" + opts.imgType.join("|") + ")$", "i").test(this.value.toLowerCase())) {
                         alert("图片类型必须是" + opts.imgType.join("，") + "中的一种");
                         this.value = "";
                         return false;
                     }
                     imgDiv.hide();
                     if ($.browser.msie) {
                         if ($.browser.version == "6.0") {
                             var img = $("<img />");
                             imgDiv.replaceWith(img);
                             imgDiv = img;

                            var image = new Image();
                             image.src = 'file:///' + this.value;

                            imgDiv.attr('src', image.src);
                            $pimg.attr('src',  image.src);
                             autoScaling();
                         }
                         else {
                             imgDiv.css({ filter: "progid:DXImageTransform.Microsoft.AlphaImageLoader(sizingMethod=image)" });
                             imgDiv.get(0).filters.item("DXImageTransform.Microsoft.AlphaImageLoader").sizingMethod = "image";
                             
                             $pimg.css({ filter: "progid:DXImageTransform.Microsoft.AlphaImageLoader(sizingMethod=image)" });
                             $pimg.get(0).filters.item("DXImageTransform.Microsoft.AlphaImageLoader").sizingMethod = "image";
                             try {

                                imgDiv.get(0).filters.item('DXImageTransform.Microsoft.AlphaImageLoader').src = getPath(_this[0]);
                                $pimg.get(0).filters.item('DXImageTransform.Microsoft.AlphaImageLoader').src = getPath(_this[0]);
                             } catch (e) {
                                 alert("无效的图片文件！");
                                 return;
                             }
                             setTimeout("autoScaling()", 100);
                        }
                     }
                     else {
                         var img = $("<img />");
                         imgDiv.replaceWith(img);
                         imgDiv = img;
                         imgDiv.attr('src', getPath(_this[0]));
                         $pimg.attr('src', getPath(_this[0]));
                         imgDiv.css({ "vertical-align": "middle" });
                         setTimeout("autoScaling()", 100);
                     }
                 }
             }
             );
         }
     });
    
 })(jQuery);

 //获得上传控件的值，obj为上传控件对象
function getPath(obj) {
     if (obj) {
         if (window.navigator.userAgent.indexOf("MSIE") >= 1) {
             obj.select();
             return document.selection.createRange().text;
         }
         else if (window.navigator.userAgent.indexOf("Firefox") >= 1) {
             if (obj.files) {  
                return window.URL.createObjectURL(obj.files[0]);
             }  
             return obj.value;
         }else if(navigator.userAgent.toLowerCase().match(/chrome/)){
        	  if (obj.files) {  
                return window.URL.createObjectURL(obj.files[0]);
             }  
             return obj.value;
         }else {
        	  if (obj.files) {  
                return window.URL.createObjectURL(obj.files[0]);
             }
             return obj.value;
         }
         return obj.value;
     }
 }
 //清空上传控件的值，obj为上传控件对象
function clearvalue(obj) {
     obj.select();
     document.execCommand("delete");
 }  
